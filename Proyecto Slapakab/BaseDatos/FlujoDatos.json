[
    {
        "id": "1a787168837f3499",
        "type": "tab",
        "label": "Skapalab - USUARIOS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9737ff214ffcf68e",
        "type": "tab",
        "label": "Skapalab - RESERVAS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e9a8bf588bc16e41",
        "type": "tab",
        "label": "Skapalab - VIS. RESERVAS",
        "disabled": false,
        "info": "Flujo reservado a la clasificación de reservas para su posterior visualización en el dashboard."
    },
    {
        "id": "d9da143bd53b7832",
        "type": "tab",
        "label": "Skapalab - ESTADÍSTICAS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6636195c7fb0d804",
        "type": "tab",
        "label": "Skapalab - mqtt",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d1bd5f5047fbe178",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "b4eb3d3dca556878",
        "type": "ui_group",
        "name": "Historiales",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e18675c0e8491a0e",
        "type": "ui_group",
        "name": "Gauges",
        "tab": "",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0d8ab506c19c508b",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "dfefd42be31cab40",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "e151e1d008301ff9",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "2de6eedc1fa4c588",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "4cbc01ddfb07fefc",
        "type": "ui_group",
        "name": "SENSORS DATA",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4421c708cfe58085",
        "type": "ui_group",
        "name": "CONTROL LEDS",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5ed624a9a6edd788",
        "type": "ui_group",
        "name": "Temperatura",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b2c1b570479ce91e",
        "type": "ui_group",
        "name": "Humedad",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c57fbfa6ca334690",
        "type": "ui_group",
        "name": "Presión",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "071c847d45d8d3b4",
        "type": "ui_group",
        "name": "Iluminación",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "100866f60dd6b3cb",
        "type": "ui_group",
        "name": "Conexión",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e5b8784f5838f34a",
        "type": "mongodb",
        "hostname": "localhost",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "prueba",
        "name": ""
    },
    {
        "id": "45a7d5cc.b3cb3c",
        "type": "ui_group",
        "name": "Registros de los últimos 10 minutos desde hace 5 minutos",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f62ab646e3b2c7d9",
        "type": "ui_group",
        "name": "Últimos Datos",
        "tab": "",
        "order": 3,
        "disp": false,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a2b23a377738b01a",
        "type": "ui_group",
        "name": "Control",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "48b06cea27af03c7",
        "type": "ui_group",
        "name": "Registros por temperatura",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f605fa69.8f5008",
        "type": "mongodb",
        "hostname": "iot.ac.uma.es",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "II8",
        "name": ""
    },
    {
        "id": "c7a3425e606353b2",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a0ee0fa8eae04a85",
        "type": "telegram bot",
        "botname": "AemetFernando2122_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "00a8d7012236d5d9",
        "type": "telegram bot",
        "botname": "SkapaLaBot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "3cc01e3e385d0ded",
        "type": "chatbot-telegram-node",
        "botname": "SkapaLaBot",
        "usernames": "",
        "token": "5084907312:AAFDpRGPmrdDihcbN7ZjePncQ779rPZBYWc",
        "providerToken": "",
        "polling": "1",
        "store": "",
        "log": "",
        "debug": false,
        "webHook": "",
        "connectMode": "polling"
    },
    {
        "id": "6052dbb45f086c0c",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "dfeb4f7103d9f61a",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "06c2acdce6287ce8",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "ejercicio",
        "name": ""
    },
    {
        "id": "c3c8c1dd31f8b3c2",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "ejercicio",
        "name": ""
    },
    {
        "id": "3bb0542f487e3e1a",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "ejercicio",
        "name": ""
    },
    {
        "id": "14e5d3c3240e4ad3",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "ejercicio",
        "name": ""
    },
    {
        "id": "2b4119c5ef03bd25",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "ejercicio",
        "name": ""
    },
    {
        "id": "ecffd46b17c1adab",
        "type": "ui_group",
        "name": "Conexión",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "aafa679d29e9b741",
        "type": "ui_group",
        "name": "Selección Límite Registros",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c4b6a79009246dff",
        "type": "ui_group",
        "name": "Selección Temperatura Mínima",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "45d5d3385eeb423a",
        "type": "ui_group",
        "name": "Últimos 5 Min",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "da4e1fc8a237efff",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "ejercicio",
        "name": ""
    },
    {
        "id": "2285489cb233f453",
        "type": "ui_group",
        "name": "Entre hace 5 y 15 min",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5fa4ef561478b77c",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "ejercicio",
        "name": ""
    },
    {
        "id": "1fcd809c305f1425",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "ejercicio",
        "name": ""
    },
    {
        "id": "7056efce268b6a61",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "20b866865426f373",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "424be61cede35da8",
        "type": "ui_group",
        "name": "Sensores",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "70462dfdf7f2eace",
        "type": "ui_group",
        "name": "Registro Nuevos Usuarios",
        "tab": "a8f33caba2aa5d3b",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3d710e6c9d34e39f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "505ab5e52d2009b7",
        "type": "ui_group",
        "name": "Sensores",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ebb0b39abcf4d936",
        "type": "ui_group",
        "name": "LEDs",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fc64d651a2d05233",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "a3eb2672e3840940",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "port": "27017",
        "db": "prueba",
        "name": ""
    },
    {
        "id": "9ce1de9f1272e4dd",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "b3794ed6f8c3e20a",
        "type": "ui_group",
        "name": "datos",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": false
    },
    {
        "id": "3b13d5b67d91ad68",
        "type": "ui_group",
        "name": "leds",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "241262896ec7fcce",
        "type": "ui_group",
        "name": "histograma",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "abbb632609badef9",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "port": "27017",
        "db": "ejercicio",
        "name": ""
    },
    {
        "id": "e85f19f301f7812b",
        "type": "ui_group",
        "name": "Charts Sensores",
        "tab": "",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "702137777bfe85cf",
        "type": "ui_group",
        "name": "Sensores",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1582e24ef93461b2",
        "type": "ui_group",
        "name": "InfoConexion",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0e25cd81a5d4415e",
        "type": "ui_group",
        "name": "SensoresJSON",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "704d13f14caa9384",
        "type": "ui_group",
        "name": "Lectura Sensor",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6c5e0601d320acc5",
        "type": "ui_link",
        "name": "Link 2",
        "icon": "open_in_browser",
        "target": "newtab",
        "order": 2
    },
    {
        "id": "b84bfdaa0c66f4ef",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "63b729607f721f51",
        "type": "ui_group",
        "name": "Lectura Luz",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "78f58297a8492ba1",
        "type": "ui_group",
        "name": "Lectura Sensores",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "48fbf5099aa6392e",
        "type": "ui_group",
        "name": "LED",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "69d325a87dd6f30a",
        "type": "telegram bot",
        "botname": "minuevobot2020_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "ac0802755d02097d",
        "type": "telegram bot",
        "botname": "previsionAEMET_InfInd_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "34b41b2a197775ab",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "",
        "name": ""
    },
    {
        "id": "2e604f11a27a3a2f",
        "type": "mongodb",
        "hostname": "iot.ac.uma.es",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "II8",
        "name": ""
    },
    {
        "id": "a8f33caba2aa5d3b",
        "type": "ui_tab",
        "name": "Skapalab",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3752afa1.deaf9",
        "type": "mongodb",
        "hostname": "iot.ac.uma.es",
        "port": "27017",
        "db": "pruebas",
        "name": ""
    },
    {
        "id": "32919b2c36d096c4",
        "type": "ui_group",
        "name": "Grupo aggregación",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "2b251178.95ad2e",
        "type": "mqtt-broker",
        "name": "iot infind",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "e09a70911f161970",
        "type": "ui_tab",
        "name": "Reservas",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "da87d3f57272efb5",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "6d967cf6cf6c49c4",
        "type": "ui_group",
        "name": "Registro",
        "tab": "be9663360939d630",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "02a79ecccb411cca",
        "type": "mongodb",
        "hostname": "iot.ac.uma.es",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "II8",
        "name": ""
    },
    {
        "id": "0acaf709e07e555b",
        "type": "ui_group",
        "name": "Estadísticas",
        "tab": "ff6861ab153e9537",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "be9663360939d630",
        "type": "ui_tab",
        "name": "Usuarios",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ff6861ab153e9537",
        "type": "ui_tab",
        "name": "Estadísticas",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e06870e71eafc671",
        "type": "ui_group",
        "name": "Interacción",
        "tab": "e09a70911f161970",
        "order": 5,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "be8fc419a201d0b4",
        "type": "ui_group",
        "name": "Sala Impresión 3D",
        "tab": "e09a70911f161970",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f7732870e5603a4c",
        "type": "ui_group",
        "name": "Sala CNC",
        "tab": "e09a70911f161970",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3a6f2b5f11d304d4",
        "type": "ui_spacer",
        "z": "e9a8bf588bc16e41",
        "name": "spacer",
        "group": "c1cbb9916e7cfba4",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "35b563b24f34096d",
        "type": "ui_spacer",
        "z": "e9a8bf588bc16e41",
        "name": "spacer",
        "group": "c1cbb9916e7cfba4",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "9e8a93e0278215b5",
        "type": "ui_spacer",
        "z": "e9a8bf588bc16e41",
        "name": "spacer",
        "group": "c1cbb9916e7cfba4",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "a7ac40b8ef47a69c",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c05eb2c3824fe0f9",
        "type": "mongodb in",
        "z": "1a787168837f3499",
        "mongodb": "02a79ecccb411cca",
        "name": "",
        "collection": "usuarios",
        "operation": "aggregate",
        "x": 620,
        "y": 460,
        "wires": [
            [
                "15a17b24bcbbc0e6"
            ]
        ]
    },
    {
        "id": "0917ce19a22dae85",
        "type": "debug",
        "z": "1a787168837f3499",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 240,
        "wires": []
    },
    {
        "id": "5980e5fbcbf0c8e0",
        "type": "mongodb out",
        "z": "1a787168837f3499",
        "mongodb": "02a79ecccb411cca",
        "name": "",
        "collection": "usuarios",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1460,
        "y": 160,
        "wires": []
    },
    {
        "id": "05f52425a9082e93",
        "type": "inject",
        "z": "1a787168837f3499",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 290,
        "y": 460,
        "wires": [
            [
                "c05eb2c3824fe0f9"
            ]
        ]
    },
    {
        "id": "15a17b24bcbbc0e6",
        "type": "debug",
        "z": "1a787168837f3499",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 460,
        "wires": []
    },
    {
        "id": "c150af9f6c756b9c",
        "type": "mongodb out",
        "z": "1a787168837f3499",
        "mongodb": "02a79ecccb411cca",
        "name": "",
        "collection": "usuarios",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 620,
        "y": 760,
        "wires": []
    },
    {
        "id": "922d3f5b3ac9e14e",
        "type": "inject",
        "z": "1a787168837f3499",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 290,
        "y": 760,
        "wires": [
            [
                "c150af9f6c756b9c"
            ]
        ]
    },
    {
        "id": "7f09b15c66068fd0",
        "type": "comment",
        "z": "1a787168837f3499",
        "name": "Lectura registros base de datos",
        "info": "",
        "x": 350,
        "y": 400,
        "wires": []
    },
    {
        "id": "79f395da6f547291",
        "type": "comment",
        "z": "1a787168837f3499",
        "name": "Borrado de la base de datos",
        "info": "",
        "x": 340,
        "y": 700,
        "wires": []
    },
    {
        "id": "868cc61e7774e074",
        "type": "comment",
        "z": "1a787168837f3499",
        "name": "Registro en la base de datos",
        "info": "",
        "x": 340,
        "y": 60,
        "wires": []
    },
    {
        "id": "23a58f753d2705a6",
        "type": "ui_form",
        "z": "1a787168837f3499",
        "name": "",
        "label": "Registro Usuario",
        "group": "6d967cf6cf6c49c4",
        "order": 7,
        "width": "0",
        "height": "0",
        "options": [
            {
                "label": "Nombre Completo",
                "value": "nombre",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Arranque",
                "value": "arranque",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "Entusiasta",
                "value": "entusiasta",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "Maker",
                "value": "maker",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "Profesional",
                "value": "profesional",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "Fecha Vencimiento",
                "value": "fecha_vencimiento",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "Acceso CNC",
                "value": "acceso_CNC",
                "type": "switch",
                "required": true,
                "rows": null
            },
            {
                "label": "Acceso 3D",
                "value": "acceso_3D",
                "type": "switch",
                "required": true,
                "rows": null
            },
            {
                "label": "Contraseña",
                "value": "password",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "ID NFC",
                "value": "id_NFC",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "nombre": "",
            "arranque": false,
            "entusiasta": false,
            "maker": false,
            "profesional": false,
            "fecha_vencimiento": "",
            "acceso_CNC": false,
            "acceso_3D": false,
            "password": "",
            "id_NFC": ""
        },
        "payload": "",
        "submit": "Registrar",
        "cancel": "Cancelar",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 330,
        "y": 160,
        "wires": [
            [
                "d8f04a5b74b4d3dd",
                "9522666460ab42fa"
            ]
        ]
    },
    {
        "id": "d8f04a5b74b4d3dd",
        "type": "debug",
        "z": "1a787168837f3499",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 220,
        "wires": []
    },
    {
        "id": "9522666460ab42fa",
        "type": "function",
        "z": "1a787168837f3499",
        "name": "",
        "func": "var Arranque = msg.payload.arranque;\nvar Maker = msg.payload.maker;\nvar Entusiasta = msg.payload.entusiasta;\nvar Profesional = msg.payload.profesional; \n\nif (Arranque == true)\n{\n    msg.payload.suscipcion = \"Arranque\"\n}\nelse if (Maker == true)\n{\n    msg.payload.suscripcion = \"Maker\"\n}\nelse if (Entusiasta == true)\n{\n    msg.payload.suscripcion = \"Entusiasta\"\n}\nelse if (Profesional == true)\n{\n    msg.payload.suscripcion = \"Profesional\"\n}\n\nmsg.payload.fecha_inclusion = new Date();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 160,
        "wires": [
            [
                "7252dfa548645846"
            ]
        ]
    },
    {
        "id": "7252dfa548645846",
        "type": "change",
        "z": "1a787168837f3499",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload.arranque",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.maker",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.entusiasta",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.profesional",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 160,
        "wires": [
            [
                "5980e5fbcbf0c8e0",
                "0917ce19a22dae85"
            ]
        ]
    },
    {
        "id": "652ae669949f0360",
        "type": "debug",
        "z": "9737ff214ffcf68e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 605,
        "y": 420,
        "wires": []
    },
    {
        "id": "ee4724b10b65fdeb",
        "type": "mongodb out",
        "z": "9737ff214ffcf68e",
        "mongodb": "f605fa69.8f5008",
        "name": "",
        "collection": "reservas",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 975,
        "y": 320,
        "wires": []
    },
    {
        "id": "3cc6ac2466037e74",
        "type": "mongodb out",
        "z": "9737ff214ffcf68e",
        "mongodb": "02a79ecccb411cca",
        "name": "",
        "collection": "reservas",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 540,
        "y": 1350,
        "wires": []
    },
    {
        "id": "8a6928654ab0f218",
        "type": "inject",
        "z": "9737ff214ffcf68e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 195,
        "y": 1350,
        "wires": [
            [
                "3cc6ac2466037e74"
            ]
        ]
    },
    {
        "id": "3d2938b7a703aad5",
        "type": "comment",
        "z": "9737ff214ffcf68e",
        "name": "Borrado de la base de datos",
        "info": "",
        "x": 245,
        "y": 1290,
        "wires": []
    },
    {
        "id": "fc393c3ce106610d",
        "type": "function",
        "z": "9737ff214ffcf68e",
        "name": "",
        "func": "\n\nmsg.payload.id_telegram = 123;\nmsg.payload.nombre = \"María\"\nmsg.payload.sala = \"CNC\"; \nmsg.payload.fecha = \"13/1/2022\"; \nmsg.payload.hora_inicio = 13; \nmsg.payload.hora_fin = 15;\nmsg.payload.id_NFC = \"100:90:231:164\"; \n\nmsg.payload.fecha_creacion = new Date(); \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 515,
        "y": 320,
        "wires": [
            [
                "652ae669949f0360",
                "ee4724b10b65fdeb"
            ]
        ]
    },
    {
        "id": "ba408b35e792f004",
        "type": "inject",
        "z": "9737ff214ffcf68e",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 205,
        "y": 320,
        "wires": [
            [
                "fc393c3ce106610d"
            ]
        ]
    },
    {
        "id": "defeeafdbbab7072",
        "type": "function",
        "z": "9737ff214ffcf68e",
        "name": "Variables Globales",
        "func": "var aforo_max_CNC; \nvar aforo_max_3D;\nvar aforo_real_CNC;\nvar aforo_real_3D;\nvar num_accesos_CNC;\nvar num_accesos_3D;\n\nvar hora_apertura;\nvar hora_cierre;\n\naforo_max_CNC = 2; \naforo_max_3D = 4; \nhora_apertura = 9; \nhora_cierre = 21; \n\nmsg.payload.hora_apertura = hora_apertura;\nmsg.payload.hora_cierre = hora_cierre;\nmsg.payload.aforomax = aforo_max_CNC;\n\nreturn msg\n\n// asignar los mensajes que me lleguen por mqtt a las variables correspondientes\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 405,
        "y": 135,
        "wires": [
            [
                "d8c5e2b0136648bd"
            ]
        ]
    },
    {
        "id": "cf3736757ab2382c",
        "type": "function",
        "z": "d9da143bd53b7832",
        "name": "agrega por dias",
        "func": "// fecha por defecto es hoy\nvar ahora = new Date();\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(global.get(\"desde\") || ahora);\nvar hasta = new Date(global.get(\"hasta\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),1,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),24,59,59,99);\n\nmsg.payload=\n[\n    { \"$match\": { \"date\": { \"$gte\": inicio , \"$lte\": final } } },\n    { \"$project\": {\n        \"date\": 1,\n        \"temperatura\": \"$BME280.Temperatura\"\n        }\n    },\n    { \"$group\": {\n        \"_id\": { \n        \"$dateFromParts\" : {\n            \"year\": { \"$year\": \"$date\" }, \n            \"month\": { \"$month\": \"$date\" },\n            \"day\": { \"$dayOfMonth\": \"$date\" }\n        }},\n\n        \"Tmedia\":{\"$avg\":\"$temperatura\"},\n        \"Tmax\":  {\"$max\":\"$temperatura\"},\n        \"Tmin\":  {\"$min\":\"$temperatura\"},\n        \"datos\": {\"$sum\":1},\n    }},\n    { \"$sort\": {\"_id\": 1} }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 500,
        "wires": [
            [
                "f40a50efcb6aa104"
            ]
        ]
    },
    {
        "id": "f40a50efcb6aa104",
        "type": "mongodb in",
        "z": "d9da143bd53b7832",
        "mongodb": "02a79ecccb411cca",
        "name": "",
        "collection": "reservas",
        "operation": "aggregate",
        "x": 594.0141830444336,
        "y": 500.00581550598145,
        "wires": [
            [
                "aa7679cdc70bbd60",
                "45880337ca458f61"
            ]
        ]
    },
    {
        "id": "aa7679cdc70bbd60",
        "type": "function",
        "z": "d9da143bd53b7832",
        "name": "genera datos grafica",
        "func": "var arrayavg=[];\nvar arraymax=[];\nvar arraymin=[];\n\n// los arrays usados en la represenstaciÃ³n grÃ¡fica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el mÃ©todo getTime()\n// en y debemos poner el valor de la variable\n// mas info en: https://github.com/node-red/node-red-dashboard/blob/master/Charts.md\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++) { // aÃ±ade datos a los array\n        arrayavg.push({x : msg.payload[i]._id.getTime() , y : msg.payload[i].Tmedia});\n        arraymax.push({x : msg.payload[i]._id.getTime() , y : msg.payload[i].Tmax});\n        arraymin.push({x : msg.payload[i]._id.getTime() , y : msg.payload[i].Tmin});\n    }\n}\n    \nmsg.payload = [{\n        \"series\":[\"T.media\",\"T.max\",\"T.min\"],\n        \"data\":[arrayavg, arraymax, arraymin],\n        \"labels\":[\"\"]\n        }];\n\nreturn msg;  ",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 939.6999740600586,
        "y": 559.0001182556152,
        "wires": [
            [
                "e0ffbaa29617a5e9"
            ]
        ]
    },
    {
        "id": "e0ffbaa29617a5e9",
        "type": "ui_chart",
        "z": "d9da143bd53b7832",
        "name": "",
        "group": "0acaf709e07e555b",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "Temperaturas diarias",
        "chartType": "line",
        "legend": "true",
        "xformat": "D/M",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#008000",
            "#ff0000",
            "#0080ff",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1260,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "14380921a8212d35",
        "type": "change",
        "z": "d9da143bd53b7832",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "desde",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 474.6914596557617,
        "y": 220.57114505767822,
        "wires": [
            [
                "65178cc307ee2af0"
            ]
        ]
    },
    {
        "id": "f2d3bfcd84ea920a",
        "type": "change",
        "z": "d9da143bd53b7832",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hasta",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 477.918701171875,
        "y": 272.4546866416931,
        "wires": [
            [
                "65178cc307ee2af0"
            ]
        ]
    },
    {
        "id": "65178cc307ee2af0",
        "type": "link out",
        "z": "d9da143bd53b7832",
        "name": "",
        "links": [
            "81eb1b08d13b216c"
        ],
        "x": 677.4556064605713,
        "y": 252.70185661315918,
        "wires": []
    },
    {
        "id": "81eb1b08d13b216c",
        "type": "link in",
        "z": "d9da143bd53b7832",
        "name": "",
        "links": [
            "65178cc307ee2af0"
        ],
        "x": 196.46699905395508,
        "y": 460.8295669555664,
        "wires": [
            [
                "cf3736757ab2382c",
                "d66ec7c88ce8d89a"
            ]
        ]
    },
    {
        "id": "d66ec7c88ce8d89a",
        "type": "function",
        "z": "d9da143bd53b7832",
        "name": "agreaga todo",
        "func": "// fecha por defecto es hoy\nvar ahora = new Date();\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(global.get(\"desde\") || ahora);\nvar hasta = new Date(global.get(\"hasta\") || ahora); \n// el díaa de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),1,0,0,0);\n// el día final es hasta final del díaa\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),24,59,59,99);\n\nmsg.payload=\n[\n    { \"$match\": { \"date\": { \"$gte\": inicio , \"$lte\": final } } },\n    { \"$project\": {\n        \"temperatura\": \"$BME280.Temperatura\"\n        }\n    },\n    { \"$group\": {\n        \"_id\": 0,\n        \"Tmedia\":{\"$avg\":\"$temperatura\"},\n        \"Tmax\":  {\"$max\":\"$temperatura\"},\n        \"Tmin\":  {\"$min\":\"$temperatura\"},\n        \"datos\": {\"$sum\":1}\n    }}\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 344.69996643066406,
        "y": 418.909143447876,
        "wires": [
            [
                "e01471b2bf0c1ae9"
            ]
        ]
    },
    {
        "id": "e01471b2bf0c1ae9",
        "type": "mongodb in",
        "z": "d9da143bd53b7832",
        "mongodb": "02a79ecccb411cca",
        "name": "",
        "collection": "reservas",
        "operation": "aggregate",
        "x": 593.7141647338867,
        "y": 417.9147596359253,
        "wires": [
            [
                "d39111dc0e1444e8",
                "0e60045c434fa340",
                "e811ecb8d55dfad3",
                "0cbde623b04a2ae7",
                "c26a6c8831c61c64"
            ]
        ]
    },
    {
        "id": "d39111dc0e1444e8",
        "type": "ui_text",
        "z": "d9da143bd53b7832",
        "group": "0acaf709e07e555b",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "MÃ©dia en el perÃ­odo",
        "format": "{{msg.payload[0].Tmedia | number:1 }}ÂºC",
        "layout": "row-left",
        "className": "",
        "x": 1010,
        "y": 340,
        "wires": []
    },
    {
        "id": "0e60045c434fa340",
        "type": "ui_text",
        "z": "d9da143bd53b7832",
        "group": "0acaf709e07e555b",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "MÃ¡xima en el perÃ­odo",
        "format": "{{msg.payload[0].Tmax | number:1 }}ÂºC",
        "layout": "row-left",
        "className": "",
        "x": 1004.2215881347656,
        "y": 379.40348625183105,
        "wires": []
    },
    {
        "id": "e811ecb8d55dfad3",
        "type": "ui_text",
        "z": "d9da143bd53b7832",
        "group": "0acaf709e07e555b",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "MÃ­nima en el perÃ­odo",
        "format": "{{msg.payload[0].Tmin | number:1 }}ÂºC",
        "layout": "row-left",
        "className": "",
        "x": 1003.2215881347656,
        "y": 417.40345191955566,
        "wires": []
    },
    {
        "id": "d74e83b660edee5e",
        "type": "comment",
        "z": "d9da143bd53b7832",
        "name": "Controles para seleccionar fechas",
        "info": "",
        "x": 278.6857490539551,
        "y": 155.8183183670044,
        "wires": []
    },
    {
        "id": "93cc22f147d1cf24",
        "type": "comment",
        "z": "d9da143bd53b7832",
        "name": "Consultas agregadas",
        "info": "",
        "x": 254.47550582885742,
        "y": 361.3608675003052,
        "wires": []
    },
    {
        "id": "45880337ca458f61",
        "type": "debug",
        "z": "d9da143bd53b7832",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 927.475471496582,
        "y": 519.8069086074829,
        "wires": []
    },
    {
        "id": "0cbde623b04a2ae7",
        "type": "debug",
        "z": "d9da143bd53b7832",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 890,
        "y": 260,
        "wires": []
    },
    {
        "id": "c26a6c8831c61c64",
        "type": "ui_text",
        "z": "d9da143bd53b7832",
        "group": "0acaf709e07e555b",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "NÃºmero de datos",
        "format": "{{msg.payload[0].datos }} muestras",
        "layout": "row-left",
        "className": "",
        "x": 990,
        "y": 460,
        "wires": []
    },
    {
        "id": "263e713ed12374ac",
        "type": "ui_date_picker",
        "z": "d9da143bd53b7832",
        "name": "",
        "label": "Fecha de inicio",
        "group": "0acaf709e07e555b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 240,
        "y": 220,
        "wires": [
            [
                "14380921a8212d35"
            ]
        ]
    },
    {
        "id": "724d3285282889a6",
        "type": "ui_date_picker",
        "z": "d9da143bd53b7832",
        "name": "",
        "label": "Fecha de final",
        "group": "0acaf709e07e555b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 243.46413040161133,
        "y": 270.7359809875488,
        "wires": [
            [
                "f2d3bfcd84ea920a"
            ]
        ]
    },
    {
        "id": "b7bc666728b1a631",
        "type": "comment",
        "z": "9737ff214ffcf68e",
        "name": "Datos constantes de aforo y recibidos por mqtt",
        "info": "",
        "x": 300,
        "y": 75,
        "wires": []
    },
    {
        "id": "71689e0fadf77c3b",
        "type": "comment",
        "z": "9737ff214ffcf68e",
        "name": "Petición de día y sala",
        "info": "",
        "x": 220,
        "y": 525,
        "wires": []
    },
    {
        "id": "9338c4f82a6059cf",
        "type": "function",
        "z": "9737ff214ffcf68e",
        "name": "Desde Telegram",
        "func": "// Simulación del mensaje que enviaría Fer\n\nmsg.payload.dia = \"12/01/2022\"\nmsg.payload.sala= \"CNC\"\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 600,
        "wires": [
            [
                "d390c974f088363a"
            ]
        ]
    },
    {
        "id": "24f22a7bbdc9d0af",
        "type": "inject",
        "z": "9737ff214ffcf68e",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 200,
        "y": 600,
        "wires": [
            [
                "9338c4f82a6059cf"
            ]
        ]
    },
    {
        "id": "be82a248e0c67a24",
        "type": "mongodb in",
        "z": "9737ff214ffcf68e",
        "mongodb": "f605fa69.8f5008",
        "name": "",
        "collection": "reservas",
        "operation": "aggregate",
        "x": 1290,
        "y": 600,
        "wires": [
            [
                "c6dbdf1ddc47e68a",
                "66988095b2f77c76"
            ]
        ]
    },
    {
        "id": "2f08021a8d3075dc",
        "type": "function",
        "z": "9737ff214ffcf68e",
        "name": "Aggregation",
        "func": "var newMsg = {};\nnewMsg.collection = \"reservas\";\nnewMsg.payload = [ \n    { \"$match\" : { \"sala\": msg.payload.sala, \"fecha\": msg.payload.fecha }}\n    ];\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 600,
        "wires": [
            [
                "be82a248e0c67a24"
            ]
        ]
    },
    {
        "id": "c6dbdf1ddc47e68a",
        "type": "debug",
        "z": "9737ff214ffcf68e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 600,
        "wires": []
    },
    {
        "id": "7bf61251386f5f7b",
        "type": "debug",
        "z": "9737ff214ffcf68e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 985,
        "y": 690,
        "wires": []
    },
    {
        "id": "760d7962294e612e",
        "type": "comment",
        "z": "9737ff214ffcf68e",
        "name": "Simulación de reservas creadas",
        "info": "",
        "x": 250,
        "y": 240,
        "wires": []
    },
    {
        "id": "af54ac0a3d1cca5c",
        "type": "comment",
        "z": "9737ff214ffcf68e",
        "name": "Petición de franja horaria",
        "info": "",
        "x": 245,
        "y": 795,
        "wires": []
    },
    {
        "id": "ab7c94caeffc5b14",
        "type": "function",
        "z": "9737ff214ffcf68e",
        "name": "Desde Telegram",
        "func": "// Simulación del mensaje que enviaría Fer\n\nmsg.payload.dia = \"12/01/2022\"\nmsg.payload.sala= \"CNC\"\n\n// Desde telegram me envían la fecha de inicio y fin\n\nmsg.payload.hora_inicio = 10;\nmsg.payload.hora_fin = 22; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 445,
        "y": 885,
        "wires": [
            [
                "70ae9bb7bbfda1e7"
            ]
        ]
    },
    {
        "id": "9662cf79697c5e3e",
        "type": "inject",
        "z": "9737ff214ffcf68e",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 200,
        "y": 885,
        "wires": [
            [
                "ab7c94caeffc5b14"
            ]
        ]
    },
    {
        "id": "d390c974f088363a",
        "type": "function",
        "z": "9737ff214ffcf68e",
        "name": "convertir fecha",
        "func": "// Se convierte el string de la fecha recibida en el mensaje de telegram en un formato de fecha\n// aceptado y en formato dia/mes/año\n\nvar fecha; \n\nfecha = new Date(msg.payload.dia);\n\nmsg.payload.fecha = fecha.toLocaleDateString(\"es-ES\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 725,
        "y": 600,
        "wires": [
            [
                "2f08021a8d3075dc",
                "7bf61251386f5f7b"
            ]
        ]
    },
    {
        "id": "70ae9bb7bbfda1e7",
        "type": "function",
        "z": "9737ff214ffcf68e",
        "name": "ack_hora_valida",
        "func": "// Se convierte el string de la fecha recibida en el mensaje de telegram en un formato de fecha\n// aceptado y en formato dia/mes/año\n\nvar fecha; \n\nfecha = new Date(msg.payload.dia);\n\nmsg.payload.fecha = fecha.toLocaleDateString(\"es-ES\");\n\n\n\n// Se comprueba si la hora de la reserva es válida\n\nvar hora_inicio = msg.payload.hora_inicio;\nvar hora_fin = msg.payload.hora_fin;\nvar ack_hora_valida;\nvar sala = msg.payload.sala; \nvar hora_apertura = global.get(\"hora_apertura\");\nvar hora_cierre = global.get(\"hora_cierre\"); \n\n// no funca\n\nif (hora_inicio >= hora_apertura && hora_inicio < hora_cierre) {\n    if (sala == 'CNC' && hora_fin >= hora_cierre) {\n        ack_hora_valida = false;\n    }\n    else {\n        ack_hora_valida = true;\n    }\n}\n\nelse {\n    ack_hora_valida = false;\n}\n\nmsg.payload.ack_hora_valida = ack_hora_valida;\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 695,
        "y": 885,
        "wires": [
            [
                "6f59eb6f190e9815",
                "b5ba5178747016e7"
            ]
        ]
    },
    {
        "id": "043e147cdc3aa559",
        "type": "inject",
        "z": "9737ff214ffcf68e",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 200,
        "y": 135,
        "wires": [
            [
                "defeeafdbbab7072"
            ]
        ]
    },
    {
        "id": "e12512dce61a1d15",
        "type": "debug",
        "z": "9737ff214ffcf68e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 935,
        "y": 135,
        "wires": []
    },
    {
        "id": "d8c5e2b0136648bd",
        "type": "change",
        "z": "9737ff214ffcf68e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hora_apertura",
                "pt": "global",
                "to": "payload.hora_apertura",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "hora_cierre",
                "pt": "global",
                "to": "payload.hora_cierre",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 135,
        "wires": [
            [
                "e12512dce61a1d15"
            ]
        ]
    },
    {
        "id": "e019da94344057fb",
        "type": "mongodb in",
        "z": "9737ff214ffcf68e",
        "mongodb": "02a79ecccb411cca",
        "name": "Ver si hay alguna reserva en esa hora",
        "collection": "reservas",
        "operation": "count",
        "x": 780,
        "y": 1065,
        "wires": [
            [
                "e49f9d61b01ce2fb"
            ]
        ]
    },
    {
        "id": "a63b223bef55d3e5",
        "type": "function",
        "z": "9737ff214ffcf68e",
        "name": "Aggregation",
        "func": "var newMsg = {};\nnewMsg.collection = \"reservas\";\nnewMsg.payload = [\n    {   \"$match\" : {    \"sala\":         msg.payload.sala, \n                        \"fecha\":        msg.payload.fecha,\n                        \"hora_inicio\":  msg.payload.hora_inicio,\n                        \"hora_fin\" :    msg.payload.hora_fin}}\n    ];\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1065,
        "wires": [
            [
                "e019da94344057fb"
            ]
        ]
    },
    {
        "id": "b5ba5178747016e7",
        "type": "debug",
        "z": "9737ff214ffcf68e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 795,
        "wires": []
    },
    {
        "id": "6f59eb6f190e9815",
        "type": "switch",
        "z": "9737ff214ffcf68e",
        "name": "hora válida?",
        "property": "payload.ack_hora_valida",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 945,
        "y": 885,
        "wires": [
            [
                "e73e1be786c4e9ae"
            ],
            [
                "a0fb1b2eb5bff73e"
            ]
        ]
    },
    {
        "id": "a0fb1b2eb5bff73e",
        "type": "link out",
        "z": "9737ff214ffcf68e",
        "name": "",
        "links": [
            "e95204506a868cd0"
        ],
        "x": 1155,
        "y": 915,
        "wires": []
    },
    {
        "id": "e95204506a868cd0",
        "type": "link in",
        "z": "9737ff214ffcf68e",
        "name": "",
        "links": [
            "a0fb1b2eb5bff73e"
        ],
        "x": 150,
        "y": 1065,
        "wires": [
            [
                "a63b223bef55d3e5"
            ]
        ]
    },
    {
        "id": "e49f9d61b01ce2fb",
        "type": "switch",
        "z": "9737ff214ffcf68e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 1065,
        "wires": [
            [
                "38c2c0663a068c9c"
            ],
            [
                "2c3faeaf3439516e"
            ]
        ]
    },
    {
        "id": "e73e1be786c4e9ae",
        "type": "function",
        "z": "9737ff214ffcf68e",
        "name": "hora no válida",
        "func": "// mandar mensaje a Telegram\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "38c2c0663a068c9c",
        "type": "function",
        "z": "9737ff214ffcf68e",
        "name": "franja ocupada - no se puede reservar",
        "func": "// mandar mensaje a Telegram\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1035,
        "wires": [
            []
        ]
    },
    {
        "id": "2c3faeaf3439516e",
        "type": "mongodb out",
        "z": "9737ff214ffcf68e",
        "mongodb": "02a79ecccb411cca",
        "name": "guardar reserva",
        "collection": "reservas",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1310,
        "y": 1095,
        "wires": []
    },
    {
        "id": "7a3d2925bd70bb5d",
        "type": "comment",
        "z": "e9a8bf588bc16e41",
        "name": "Reserva Actual",
        "info": "",
        "x": 245,
        "y": 435,
        "wires": []
    },
    {
        "id": "1bbe20485d9216bc",
        "type": "ui_button",
        "z": "e9a8bf588bc16e41",
        "name": "",
        "group": "e06870e71eafc671",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Actualizar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 195,
        "wires": [
            [
                "0b30f31b6e84ead5",
                "bcf90579f6a0d03c"
            ]
        ]
    },
    {
        "id": "acb5e41c30a4b668",
        "type": "comment",
        "z": "e9a8bf588bc16e41",
        "name": "Actualizar y Última Actualización",
        "info": "",
        "x": 275,
        "y": 105,
        "wires": []
    },
    {
        "id": "0b30f31b6e84ead5",
        "type": "link out",
        "z": "e9a8bf588bc16e41",
        "name": "",
        "links": [
            "2099185171915f1a",
            "265008ce1420060e",
            "2f9a406bd3a6a2ed",
            "fc2176fc9353c42f",
            "7c27e066144e18cb"
        ],
        "x": 385,
        "y": 195,
        "wires": []
    },
    {
        "id": "bcf90579f6a0d03c",
        "type": "function",
        "z": "e9a8bf588bc16e41",
        "name": "Última Actualización",
        "func": "var fecha;\n\nfecha = new Date();\n\nmsg.payload = fecha.toLocaleString(\"es-ES\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 475,
        "y": 285,
        "wires": [
            [
                "02c525b5326ce2f5"
            ]
        ]
    },
    {
        "id": "02c525b5326ce2f5",
        "type": "ui_text",
        "z": "e9a8bf588bc16e41",
        "group": "e06870e71eafc671",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Última Actualización: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 805,
        "y": 285,
        "wires": []
    },
    {
        "id": "08aa8541d0129ba6",
        "type": "function",
        "z": "e9a8bf588bc16e41",
        "name": "Reserva Actual CNC",
        "func": "var hora_actual;\nvar hora_inicio;\nvar hora_fin;\nvar ahora;\n\nahora = new Date();\nhora_actual = ahora.getHours();\n\n\nif (msg.payload != []) {\n\n    hora_inicio = msg.payload[0].hora_inicio;\n    hora_fin = msg.payload[0].hora_fin;\n    \n    if (hora_inicio <= hora_actual && hora_actual <= hora_fin) {\n        msg.reserva_actual_CNC = true;\n        \n    }\n    else {\n        msg.reserva_actual_CNC = false;\n    }\n}\n\nelse {\n    msg.reservaa_actual_CNC = false;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1195,
        "y": 840,
        "wires": [
            [
                "2e5cd5d556dec4d8"
            ]
        ]
    },
    {
        "id": "265008ce1420060e",
        "type": "link in",
        "z": "e9a8bf588bc16e41",
        "name": "",
        "links": [
            "0b30f31b6e84ead5"
        ],
        "x": 195,
        "y": 705,
        "wires": [
            [
                "6c738284965556ed",
                "1c698b57b4b387c6"
            ]
        ]
    },
    {
        "id": "76053fc224fdaec1",
        "type": "function",
        "z": "e9a8bf588bc16e41",
        "name": "Reserva Actual 3D",
        "func": "var hora_actual;\nvar hora_inicio;\nvar hora_fin;\nvar ahora;\n\nahora = new Date();\nhora_actual = ahora.getHours();\nhora_inicio = msg.payload[0].hora_inicio;\nhora_fin = msg.payload[0].hora_fin;\n\n\n\nif (hora_actual >= hora_inicio && hora_actual <= hora_fin) {\n    msg.reserva_actual_3D = true;\n    \n}\nelse {\n    msg.reserva_actual_3D = false;\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 525,
        "wires": [
            [
                "d36ee1716a6c286a",
                "da66fe2798d2f80d"
            ]
        ]
    },
    {
        "id": "2555b016b8d06780",
        "type": "mongodb in",
        "z": "e9a8bf588bc16e41",
        "mongodb": "02a79ecccb411cca",
        "name": "",
        "collection": "reservas",
        "operation": "aggregate",
        "x": 660,
        "y": 525,
        "wires": [
            [
                "b02901658cd5c532"
            ]
        ]
    },
    {
        "id": "7d795a0d9fb2debb",
        "type": "mongodb in",
        "z": "e9a8bf588bc16e41",
        "mongodb": "02a79ecccb411cca",
        "name": "",
        "collection": "reservas",
        "operation": "aggregate",
        "x": 660,
        "y": 855,
        "wires": [
            [
                "df38aa5257fd47a4"
            ]
        ]
    },
    {
        "id": "b00d6d7456f65e83",
        "type": "template",
        "z": "e9a8bf588bc16e41",
        "name": "lista en formato html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " <h1>Reserva actual Impresión 3D: </h1>\n <ul>\n{{#payload}}\n<dl>  \n<dt>   \n    <dd> Nombre: {{nombre}}\n    <dd> Hora inicio: {{hora_inicio}}\n    <dd> Hora fin: {{hora_fin}}\n<dt>\n{{/payload}}\n </ul>",
        "output": "str",
        "x": 1705,
        "y": 420,
        "wires": [
            [
                "3134a423db23cf95"
            ]
        ]
    },
    {
        "id": "3134a423db23cf95",
        "type": "ui_template",
        "z": "e9a8bf588bc16e41",
        "group": "be8fc419a201d0b4",
        "name": "Reserva Actual 3D",
        "order": 2,
        "width": "6",
        "height": "4",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2010,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "b1d4addd26809289",
        "type": "template",
        "z": "e9a8bf588bc16e41",
        "name": "lista en formato html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " <h1>Reserva Actual CNC: </h1>\n <ul>\n{{#payload}}\n<dl>  \n<dt>   \n    <dd> Nombre: {{nombre}}  \n    <dd> Hora inicio: {{hora_inicio}}\n    <dd> Hora fin: {{hora_fin}}\n<dt>\n{{/payload}}\n </ul>",
        "output": "str",
        "x": 1735,
        "y": 765,
        "wires": [
            [
                "f0646b5178cdd464"
            ]
        ]
    },
    {
        "id": "f0646b5178cdd464",
        "type": "ui_template",
        "z": "e9a8bf588bc16e41",
        "group": "f7732870e5603a4c",
        "name": "Reserva Actual CNC",
        "order": 4,
        "width": "6",
        "height": "4",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2035,
        "y": 765,
        "wires": [
            []
        ]
    },
    {
        "id": "d36ee1716a6c286a",
        "type": "switch",
        "z": "e9a8bf588bc16e41",
        "name": "",
        "property": "reserva_actual_3D",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1415,
        "y": 525,
        "wires": [
            [
                "b00d6d7456f65e83",
                "a36ca7946d7d4930"
            ],
            [
                "a0e0423d59a6cef3"
            ]
        ]
    },
    {
        "id": "6c738284965556ed",
        "type": "function",
        "z": "e9a8bf588bc16e41",
        "name": "Agregación",
        "func": "var ahora;\nvar fecha_actual;\nvar hora_actual;\n\nahora = new Date();\nfecha_actual = ahora.toLocaleDateString();\nhora_actual = ahora.getHours();\n\n\nmsg.collection = \"reservas\";\nmsg.payload = [ \n    { \"$match\" : { \"sala\" : \"3D\" , \"fecha\": fecha_actual, \"hora_inicio\": {\"$gte\": hora_actual}}},\n    { \"$sort\" : {\"hora_inicio\" : 1}},\n    { \"$limit\" : 1 }\n    ];\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 385,
        "y": 525,
        "wires": [
            [
                "2555b016b8d06780",
                "f60f9a05ac1b9d6f"
            ]
        ]
    },
    {
        "id": "1c698b57b4b387c6",
        "type": "function",
        "z": "e9a8bf588bc16e41",
        "name": "Agregación",
        "func": "msg.collection = \"reservas\";\nmsg.payload = [ \n    { \"$match\" : { \"sala\" : \"CNC\" , \"fecha\": Date.now()}},\n    { \"$sort\" : {\"hora_inicio\" : 1}},\n    {\"$limit\" : 1}\n    ];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 385,
        "y": 855,
        "wires": [
            [
                "7d795a0d9fb2debb"
            ]
        ]
    },
    {
        "id": "2e5cd5d556dec4d8",
        "type": "switch",
        "z": "e9a8bf588bc16e41",
        "name": "",
        "property": "payload.reserva_actual_CNC",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1445,
        "y": 840,
        "wires": [
            [
                "b1d4addd26809289",
                "2114b32d5b9c492b"
            ],
            [
                "bae3980c346221b0"
            ]
        ]
    },
    {
        "id": "a0e0423d59a6cef3",
        "type": "change",
        "z": "e9a8bf588bc16e41",
        "name": "No hay reservas en curso",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "No hay reservas en curso",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1715,
        "y": 645,
        "wires": [
            [
                "f8a36591d8d2814e"
            ]
        ]
    },
    {
        "id": "bae3980c346221b0",
        "type": "change",
        "z": "e9a8bf588bc16e41",
        "name": "No hay reservas en curso",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "No hay reservas en curso",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1745,
        "y": 975,
        "wires": [
            [
                "d1b674859f418f21"
            ]
        ]
    },
    {
        "id": "f8a36591d8d2814e",
        "type": "ui_text",
        "z": "e9a8bf588bc16e41",
        "group": "be8fc419a201d0b4",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Estado Actual 3D",
        "label": "Estado Actual 3D",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 2025,
        "y": 555,
        "wires": []
    },
    {
        "id": "d1b674859f418f21",
        "type": "ui_text",
        "z": "e9a8bf588bc16e41",
        "group": "f7732870e5603a4c",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Estado Actual CNC",
        "label": "Estado Actual CNC",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 2055,
        "y": 900,
        "wires": []
    },
    {
        "id": "f60f9a05ac1b9d6f",
        "type": "debug",
        "z": "e9a8bf588bc16e41",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 625,
        "y": 450,
        "wires": []
    },
    {
        "id": "da66fe2798d2f80d",
        "type": "debug",
        "z": "e9a8bf588bc16e41",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1415,
        "y": 435,
        "wires": []
    },
    {
        "id": "b02901658cd5c532",
        "type": "switch",
        "z": "e9a8bf588bc16e41",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 915,
        "y": 525,
        "wires": [
            [
                "76053fc224fdaec1"
            ],
            [
                "a0e0423d59a6cef3"
            ]
        ]
    },
    {
        "id": "df38aa5257fd47a4",
        "type": "switch",
        "z": "e9a8bf588bc16e41",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 920,
        "y": 855,
        "wires": [
            [
                "08aa8541d0129ba6"
            ],
            [
                "bae3980c346221b0"
            ]
        ]
    },
    {
        "id": "a36ca7946d7d4930",
        "type": "change",
        "z": "e9a8bf588bc16e41",
        "name": "Hay reservas en curso",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Hay reservas en curso en la sala de impresión 3D",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1705,
        "y": 525,
        "wires": [
            [
                "f8a36591d8d2814e"
            ]
        ]
    },
    {
        "id": "2114b32d5b9c492b",
        "type": "change",
        "z": "e9a8bf588bc16e41",
        "name": "Hay reservas en curso",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Hay reservas en curso en la sala de CNC",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 855,
        "wires": [
            [
                "d1b674859f418f21"
            ]
        ]
    },
    {
        "id": "50ef85333764cc9d",
        "type": "mongodb in",
        "z": "e9a8bf588bc16e41",
        "mongodb": "02a79ecccb411cca",
        "name": "",
        "collection": "reservas",
        "operation": "aggregate",
        "x": 840,
        "y": 1155,
        "wires": [
            [
                "5a0f2b19c1683ffb"
            ]
        ]
    },
    {
        "id": "f620bd88ef8815df",
        "type": "comment",
        "z": "e9a8bf588bc16e41",
        "name": "Listados generales de reservas por sala - Hoy",
        "info": "",
        "x": 335,
        "y": 1035,
        "wires": []
    },
    {
        "id": "3f75ee7b80780f33",
        "type": "function",
        "z": "e9a8bf588bc16e41",
        "name": "Mostrar Reservas 3D",
        "func": "var ahora;\nvar fecha_actual;\nvar hora_actual;\n\nahora = new Date();\nfecha_actual = ahora.toLocaleDateString();\nhora_actual = ahora.getHours();\n\nmsg.collection = \"reservas\";\nmsg.payload = [ \n    \n    // He eliminado las reservas pasadas\n    { \"$match\" : { \"sala\" : \"3D\" }, \"fecha\": fecha_actual, \"hora_inicio\": {\"$gte\": hora_actual}},\n    { \"$sort\" : {\"fecha\" : 1}},\n    { \"$sort\" : {\"hora_inicio\" : 1}}\n    ];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1155,
        "wires": [
            [
                "50ef85333764cc9d"
            ]
        ]
    },
    {
        "id": "5a0f2b19c1683ffb",
        "type": "template",
        "z": "e9a8bf588bc16e41",
        "name": "lista en formato html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " <h1>Más reservas hoy: </h1>\n <ul>\n{{#payload}}\n<dl>  \n<dt>   \n    <dd> Nombre: {{nombre}}  \n    <dd> Fecha: {{fecha}}\n    <dd> Hora inicio: {{hora_inicio}}\n    <dd> Hora fin: {{hora_fin}}\n<dt>\n{{/payload}}\n </ul>",
        "output": "str",
        "x": 1150,
        "y": 1155,
        "wires": [
            [
                "9435de7b56e70557"
            ]
        ]
    },
    {
        "id": "9435de7b56e70557",
        "type": "ui_template",
        "z": "e9a8bf588bc16e41",
        "group": "be8fc419a201d0b4",
        "name": "",
        "order": 0,
        "width": "6",
        "height": "6",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1390,
        "y": 1155,
        "wires": [
            []
        ]
    },
    {
        "id": "466766505233af6c",
        "type": "mongodb in",
        "z": "e9a8bf588bc16e41",
        "mongodb": "02a79ecccb411cca",
        "name": "",
        "collection": "reservas",
        "operation": "aggregate",
        "x": 840,
        "y": 1260,
        "wires": [
            [
                "c8daea0a2c52cbc7"
            ]
        ]
    },
    {
        "id": "b6817b8373e4909e",
        "type": "function",
        "z": "e9a8bf588bc16e41",
        "name": "Mostrar Reservas CNC",
        "func": "var ahora;\nvar fecha_actual;\nvar hora_actual;\n\nahora = new Date();\nfecha_actual = ahora.toLocaleDateString();\nhora_actual = ahora.getHours();\n\nmsg.collection = \"reservas\";\nmsg.payload = [ \n    \n    // He eliminado las reservas pasadas\n    { \"$match\" : { \"sala\" : \"CNC\" }, \"fecha\": fecha_actual, \"hora_inicio\": {\"$gte\": hora_actual}},\n    { \"$sort\" : {\"fecha\" : 1}},\n    { \"$sort\" : {\"hora_inicio\" : 1}}\n    ];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1260,
        "wires": [
            [
                "466766505233af6c"
            ]
        ]
    },
    {
        "id": "c8daea0a2c52cbc7",
        "type": "template",
        "z": "e9a8bf588bc16e41",
        "name": "lista en formato html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " <h1> Más reservas hoy: </h1>\n <ul>\n{{#payload}}\n<dl>  \n<dt>   \n    <dd> Nombre: {{nombre}}  \n    <dd> Fecha: {{fecha}}\n    <dd> Hora inicio: {{hora_inicio}}\n    <dd> Hora fin: {{hora_fin}}\n<dt>\n{{/payload}}\n </ul>",
        "output": "str",
        "x": 1150,
        "y": 1260,
        "wires": [
            [
                "2b06a9123b3c406d"
            ]
        ]
    },
    {
        "id": "2b06a9123b3c406d",
        "type": "ui_template",
        "z": "e9a8bf588bc16e41",
        "group": "f7732870e5603a4c",
        "name": "",
        "order": 0,
        "width": "6",
        "height": "6",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1390,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "fc2176fc9353c42f",
        "type": "link in",
        "z": "e9a8bf588bc16e41",
        "name": "",
        "links": [
            "0b30f31b6e84ead5"
        ],
        "x": 210,
        "y": 1200,
        "wires": [
            [
                "3f75ee7b80780f33",
                "b6817b8373e4909e"
            ]
        ]
    },
    {
        "id": "d1eadac1e2fe8c26",
        "type": "mongodb in",
        "z": "e9a8bf588bc16e41",
        "mongodb": "02a79ecccb411cca",
        "name": "",
        "collection": "reservas",
        "operation": "aggregate",
        "x": 840,
        "y": 1485,
        "wires": [
            [
                "237dec0d1c2c6d05"
            ]
        ]
    },
    {
        "id": "e12c11c846a8bc00",
        "type": "function",
        "z": "e9a8bf588bc16e41",
        "name": "Mostrar Reservas 3D",
        "func": "msg.collection = \"reservas\";\nmsg.payload = [ \n    \n    // He eliminado las reservas pasadas\n    { \"$match\" : { \"sala\" : \"3D\" }},\n    { \"$sort\" : {\"fecha\" : 1}},\n    { \"$sort\" : {\"hora_inicio\" : 1}}\n    ];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1485,
        "wires": [
            [
                "d1eadac1e2fe8c26"
            ]
        ]
    },
    {
        "id": "237dec0d1c2c6d05",
        "type": "template",
        "z": "e9a8bf588bc16e41",
        "name": "lista en formato html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " <h1>Reservas próximos días: </h1>\n <ul>\n{{#payload}}\n<dl>  \n<dt>   \n    <dd> Nombre: {{nombre}}  \n    <dd> Fecha: {{fecha}}\n    <dd> Hora inicio: {{hora_inicio}}\n    <dd> Hora fin: {{hora_fin}}\n<dt>\n{{/payload}}\n </ul>",
        "output": "str",
        "x": 1150,
        "y": 1485,
        "wires": [
            [
                "7d70f152285a461b"
            ]
        ]
    },
    {
        "id": "7d70f152285a461b",
        "type": "ui_template",
        "z": "e9a8bf588bc16e41",
        "group": "be8fc419a201d0b4",
        "name": "",
        "order": 0,
        "width": "6",
        "height": "6",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1390,
        "y": 1485,
        "wires": [
            []
        ]
    },
    {
        "id": "5fcfa937d5d56ecb",
        "type": "mongodb in",
        "z": "e9a8bf588bc16e41",
        "mongodb": "02a79ecccb411cca",
        "name": "",
        "collection": "reservas",
        "operation": "aggregate",
        "x": 840,
        "y": 1590,
        "wires": [
            [
                "21a30fbb9ecf8a71"
            ]
        ]
    },
    {
        "id": "e5b0c9f8977e9e55",
        "type": "function",
        "z": "e9a8bf588bc16e41",
        "name": "Mostrar Reservas CNC",
        "func": "msg.collection = \"reservas\";\nmsg.payload = [ \n    \n    // He eliminado las reservas pasadas\n    { \"$match\" : { \"sala\" : \"CNC\" }},\n    { \"$sort\" : {\"fecha\" : 1}},\n    { \"$sort\" : {\"hora_inicio\" : 1}}\n    ];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1590,
        "wires": [
            [
                "5fcfa937d5d56ecb"
            ]
        ]
    },
    {
        "id": "21a30fbb9ecf8a71",
        "type": "template",
        "z": "e9a8bf588bc16e41",
        "name": "lista en formato html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " <h1>Reservas próximos días: </h1>\n <ul>\n{{#payload}}\n<dl>  \n<dt>   \n    <dd> Nombre: {{nombre}}  \n    <dd> Fecha: {{fecha}}\n    <dd> Hora inicio: {{hora_inicio}}\n    <dd> Hora fin: {{hora_fin}}\n<dt>\n{{/payload}}\n </ul>",
        "output": "str",
        "x": 1150,
        "y": 1590,
        "wires": [
            [
                "2b356c59d217b067"
            ]
        ]
    },
    {
        "id": "2b356c59d217b067",
        "type": "ui_template",
        "z": "e9a8bf588bc16e41",
        "group": "f7732870e5603a4c",
        "name": "",
        "order": 0,
        "width": "6",
        "height": "6",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1390,
        "y": 1590,
        "wires": [
            []
        ]
    },
    {
        "id": "7c27e066144e18cb",
        "type": "link in",
        "z": "e9a8bf588bc16e41",
        "name": "",
        "links": [
            "0b30f31b6e84ead5"
        ],
        "x": 210,
        "y": 1530,
        "wires": [
            [
                "e12c11c846a8bc00",
                "e5b0c9f8977e9e55"
            ]
        ]
    },
    {
        "id": "6f2461b7eb4ef07b",
        "type": "comment",
        "z": "e9a8bf588bc16e41",
        "name": "Listados generales de reservas por sala - Próximos días",
        "info": "",
        "x": 395,
        "y": 1395,
        "wires": []
    },
    {
        "id": "1718efa673d126f5",
        "type": "inject",
        "z": "6636195c7fb0d804",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 225,
        "wires": [
            [
                "b1157116731ed6f0"
            ]
        ]
    },
    {
        "id": "51bc0a295686bac8",
        "type": "comment",
        "z": "6636195c7fb0d804",
        "name": "Me llega el id de la tarjeta",
        "info": "Este id me llega porque en la caché de la placa no existe nadie con este identificador. Se pretende buscar el identificador en la base de datos y, si existe, abrir la puerta y si no existe, no abrirla. ",
        "x": 140,
        "y": 165,
        "wires": []
    },
    {
        "id": "b1157116731ed6f0",
        "type": "function",
        "z": "6636195c7fb0d804",
        "name": "id_NFC",
        "func": "msg.id_NFC = \"88:109:195:73\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 225,
        "wires": [
            [
                "0748b6394ae2e08d"
            ]
        ]
    },
    {
        "id": "62fd6666275e1a6b",
        "type": "mongodb in",
        "z": "6636195c7fb0d804",
        "mongodb": "02a79ecccb411cca",
        "name": "",
        "collection": "usuarios",
        "operation": "aggregate",
        "x": 795,
        "y": 225,
        "wires": [
            [
                "8131757fd10606e0"
            ]
        ]
    },
    {
        "id": "0748b6394ae2e08d",
        "type": "function",
        "z": "6636195c7fb0d804",
        "name": "Match",
        "func": "var id_buscado;\nid_buscado = msg.id_NFC;\n\nmsg.collection = \"usuarios\";\nmsg.payload = [ \n    { \"$match\" : { \"id_NFC\" : id_buscado}}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 225,
        "wires": [
            [
                "62fd6666275e1a6b"
            ]
        ]
    },
    {
        "id": "8131757fd10606e0",
        "type": "switch",
        "z": "6636195c7fb0d804",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1040,
        "y": 225,
        "wires": [
            [
                "a80e2fd9683bcfdf"
            ]
        ]
    },
    {
        "id": "603e22abb2100e15",
        "type": "mqtt out",
        "z": "6636195c7fb0d804",
        "name": "",
        "topic": "puerta_[n]/puerta/abrir",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a7ac40b8ef47a69c",
        "x": 1300,
        "y": 360,
        "wires": []
    },
    {
        "id": "a53f62d57e87c990",
        "type": "comment",
        "z": "6636195c7fb0d804",
        "name": "manda (o no) la señal para abrir la puerta",
        "info": "",
        "x": 1300,
        "y": 300,
        "wires": []
    },
    {
        "id": "b02a57a94f3c1e6c",
        "type": "debug",
        "z": "6636195c7fb0d804",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 435,
        "wires": []
    },
    {
        "id": "2e4860f6376a576c",
        "type": "link in",
        "z": "6636195c7fb0d804",
        "name": "",
        "links": [
            "a80e2fd9683bcfdf"
        ],
        "x": 810,
        "y": 390,
        "wires": [
            [
                "4fe9f23c2bac8829"
            ]
        ]
    },
    {
        "id": "a80e2fd9683bcfdf",
        "type": "link out",
        "z": "6636195c7fb0d804",
        "name": "",
        "links": [
            "2e4860f6376a576c"
        ],
        "x": 1180,
        "y": 225,
        "wires": []
    },
    {
        "id": "4fe9f23c2bac8829",
        "type": "change",
        "z": "6636195c7fb0d804",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 390,
        "wires": [
            [
                "603e22abb2100e15",
                "b02a57a94f3c1e6c"
            ]
        ]
    },
    {
        "id": "19019dc1a4e2f02e",
        "type": "comment",
        "z": "6636195c7fb0d804",
        "name": "ABRIR PUERTA CON ID_NFC",
        "info": "",
        "x": 150,
        "y": 105,
        "wires": []
    },
    {
        "id": "258d6479b166b65b",
        "type": "comment",
        "z": "6636195c7fb0d804",
        "name": "MANDAR LISTA DIARIA DE IDS CON RESERVA + ID ADMIN",
        "info": "",
        "x": 265,
        "y": 600,
        "wires": []
    },
    {
        "id": "95ed07bbf388b895",
        "type": "function",
        "z": "6636195c7fb0d804",
        "name": "agregación - reservas hoy",
        "func": "var ahora;\nvar fecha_actual;\nvar hora_actual;\n\nahora = new Date();\nfecha_actual = ahora.toLocaleDateString();\n\nmsg.collection = \"reservas\";\nmsg.payload = [ { \"$match\" : {\"fecha\": fecha_actual}}\n];\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 705,
        "wires": [
            [
                "43780cebd0ad073a"
            ]
        ]
    },
    {
        "id": "43780cebd0ad073a",
        "type": "mongodb in",
        "z": "6636195c7fb0d804",
        "mongodb": "02a79ecccb411cca",
        "name": "",
        "collection": "reservas",
        "operation": "aggregate",
        "x": 900,
        "y": 705,
        "wires": [
            [
                "082518499ac03752"
            ]
        ]
    },
    {
        "id": "4513285d100636c2",
        "type": "inject",
        "z": "6636195c7fb0d804",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 08 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 705,
        "wires": [
            [
                "95ed07bbf388b895"
            ]
        ]
    },
    {
        "id": "89178c097e0826d5",
        "type": "debug",
        "z": "6636195c7fb0d804",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 630,
        "wires": []
    },
    {
        "id": "c658f634027eec04",
        "type": "link in",
        "z": "6636195c7fb0d804",
        "name": "",
        "links": [
            "76787ade490d386c",
            "a6609b2445449f60"
        ],
        "x": 90,
        "y": 840,
        "wires": [
            [
                "622cd391f6e1bdd2"
            ]
        ]
    },
    {
        "id": "76787ade490d386c",
        "type": "link out",
        "z": "6636195c7fb0d804",
        "name": "",
        "links": [
            "c658f634027eec04"
        ],
        "x": 1365,
        "y": 705,
        "wires": []
    },
    {
        "id": "8f05ce0f53c4fd8c",
        "type": "comment",
        "z": "6636195c7fb0d804",
        "name": "LEER",
        "info": "Ajustar la fecha y los días en los que queremos que se mande. ",
        "x": 95,
        "y": 660,
        "wires": []
    },
    {
        "id": "622cd391f6e1bdd2",
        "type": "function",
        "z": "6636195c7fb0d804",
        "name": "ids comunes",
        "func": "var num_ids;\nvar ids_comunes = [\"88:109:194:73\"];\n\n\nnum_ids = msg.num_ids;\n\nfor (let i = 0; i < num_ids; i++) {\n    \n    ids_comunes.push(msg.reservas_hoy[i].id_NFC);\n    msg.payload = ids_comunes;\n}\n\nmsg.payload = ids_comunes;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 840,
        "wires": [
            [
                "7ebcef1665f1f5a1"
            ]
        ]
    },
    {
        "id": "7ebcef1665f1f5a1",
        "type": "debug",
        "z": "6636195c7fb0d804",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 885,
        "wires": []
    },
    {
        "id": "082518499ac03752",
        "type": "change",
        "z": "6636195c7fb0d804",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reservas_hoy",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "num_ids",
                "pt": "msg",
                "to": "$count(msg.reservas_hoy)\t",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1205,
        "y": 705,
        "wires": [
            [
                "76787ade490d386c",
                "89178c097e0826d5"
            ]
        ]
    },
    {
        "id": "44a75de3a98594fb",
        "type": "comment",
        "z": "6636195c7fb0d804",
        "name": "se manda por mqtt - LEER",
        "info": "No sé si es necesario que tenga la key \"idComun1\", \"idComun2\", etc...si no hace falta es mucho más simple como está ahora. ",
        "x": 575,
        "y": 795,
        "wires": []
    },
    {
        "id": "b0afc1b1e9d69c93",
        "type": "comment",
        "z": "9737ff214ffcf68e",
        "name": "Petición a DB con día y sala de Fer",
        "info": "msg.payload.dia = \"dd/mm/aaaa\"\nmsg.payload.sala = \"3D\"",
        "x": 600,
        "y": 480,
        "wires": []
    },
    {
        "id": "27be31c689baea40",
        "type": "link in",
        "z": "9737ff214ffcf68e",
        "name": "",
        "links": [
            "99e352af81bde24b"
        ],
        "x": 595,
        "y": 540,
        "wires": [
            [
                "d390c974f088363a"
            ]
        ]
    },
    {
        "id": "66988095b2f77c76",
        "type": "link out",
        "z": "9737ff214ffcf68e",
        "name": "",
        "links": [
            "16ff79ca21cb7d3f"
        ],
        "x": 1435,
        "y": 540,
        "wires": []
    },
    {
        "id": "a24d1071f0a97a52",
        "type": "comment",
        "z": "9737ff214ffcf68e",
        "name": "Mandar lista de reservas a Fer",
        "info": "",
        "x": 1420,
        "y": 480,
        "wires": []
    }
]